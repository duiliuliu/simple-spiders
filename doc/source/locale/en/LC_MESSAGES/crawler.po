# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, pengr
# This file is distributed under the same license as the simple-spiders
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: simple-spiders \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-11 11:26+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/crawler.rst:2
msgid "Api document"
msgstr ""

#: ../../source/crawler.rst:6
msgid "crawler.spider"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader:1 crawler.htmlParser.HtmlParser:1
#: crawler.requestManager.RequestManager:1 crawler.spider.Spider:1
#: crawler.writter.DataWriter:1 of
msgid "Bases: :class:`object`"
msgstr ""

#: crawler.spider.Spider:1 of
msgid "爬取调度器 初始化需传入一个start_request"
msgstr ""

#: crawler.spider.Spider.start_crawl:1 of
msgid "爬取方法，对requestManager中的url进行请求downloa，然后解析。"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_headers:7
#: crawler.htmlDownloader.HtmlDownloader.refresh_proxy:5
#: crawler.htmlDownloader.HtmlDownloader.refresh_useragent:5
#: crawler.htmlDownloader.HtmlDownloader.set_headers:7
#: crawler.htmlDownloader.HtmlDownloader.set_timeout:5
#: crawler.requestManager.RequestManager.add_new_request:5
#: crawler.requestManager.RequestManager.add_new_requests:5
#: crawler.spider.Spider.start_crawl:3
#: crawler.spider.Spider.start_multiProcess_crawl:5
#: crawler.spider.Spider.start_multiThread_crawl:5
#: crawler.writter.DataWriter.flush_buffer:3 crawler.writter.DataWriter.write:5
#: crawler.writter.DataWriter.write_buffer:5 of
msgid "return : None"
msgstr ""

#: crawler.spider.Spider.start_multiProcess_crawl:1 of
msgid "多进程爬取方法，对requestManager中的url进行请求downloa，然后解析。"
msgstr ""

#: crawler.spider.Spider.start_multiProcess_crawl:3 of
msgid "@param :: capacity : 进程池容量"
msgstr ""

#: crawler.spider.Spider.start_multiThread_crawl:1 of
msgid "多线程爬取方法，对requestManager中的url进行请求downloa，然后解析。"
msgstr ""

#: crawler.spider.Spider.start_multiThread_crawl:3 of
msgid "@param :: capacity : 线程池容量"
msgstr ""

#: ../../source/crawler.rst:14
msgid "crawler.requestManager"
msgstr ""

#: crawler.requestManager.RequestManager:1 of
msgid "请求管理器 统一管理所有的请求，包括待请求的与已请求的请求。"
msgstr ""

#: crawler.requestManager.RequestManager.add_new_request:1 of
msgid "添加请求"
msgstr ""

#: crawler.requestManager.RequestManager.add_new_request:3 of
msgid "@param :: requests : 待添加请求"
msgstr ""

#: crawler.requestManager.RequestManager.add_new_requests:1 of
msgid "添加请求集合"
msgstr ""

#: crawler.requestManager.RequestManager.add_new_requests:3 of
msgid "@param :: requests : 待添加请求集合"
msgstr ""

#: crawler.requestManager.RequestManager.get_level:1 of
msgid "获取当前层级"
msgstr ""

#: crawler.requestManager.RequestManager.get_level:3
#: crawler.requestManager.RequestManager.new_requests_size:5
#: crawler.requestManager.RequestManager.old_requests_size:5 of
msgid "return : int"
msgstr ""

#: crawler.requestManager.RequestManager.get_new_request:1 of
msgid "获取一个未被请求过的请求"
msgstr ""

#: crawler.requestManager.RequestManager.get_new_request:3 of
msgid "@param :: level : 从指定层数中提取，默认为None"
msgstr ""

#: crawler.requestManager.RequestManager.get_new_request:5 of
msgid "return : request"
msgstr ""

#: crawler.requestManager.RequestManager.has_new_request:1 of
msgid "判断是否还有待爬取的请求，当传入level后，判断相应的层数中是否还有待爬取的请求。默认判断所有层数"
msgstr ""

#: crawler.requestManager.RequestManager.has_new_request:3 of
msgid "@param :: level : 待添加请求集合"
msgstr ""

#: crawler.requestManager.RequestManager.has_new_request:5
#: crawler.writter.DataWriter.has_buffer:3 of
msgid "return : Bool"
msgstr ""

#: crawler.requestManager.RequestManager.new_requests_size:1 of
msgid "待爬取的请求集合长度"
msgstr ""

#: crawler.requestManager.RequestManager.new_requests_size:3
#: crawler.requestManager.RequestManager.old_requests_size:3 of
msgid "@param :: level : 获取指定层数的请求集合长度"
msgstr ""

#: crawler.requestManager.RequestManager.old_requests_size:1 of
msgid "已请求的请求集合长度"
msgstr ""

#: ../../source/crawler.rst:22
msgid "crawler.htmlDownloader"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader:1 of
msgid "资源下载器 进行网络请求资源，返回utf-8格式的文本"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.download:1 of
msgid "资源下载，返回一个response字典，属性有status:响应状态码；text: 响应内容；url:请求url；level：当前请求的网络层数"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.download:3 of
msgid "@param :: request : 打算访问的请求"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.download:5 of
msgid "return : Response"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_headers:1 of
msgid "更新请求头，传入的请求头字典中，值为None表示请求头更新剔除相应的键，值不为None则更新相应的值"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_headers:3 of
msgid "@param :: headers : 打算更新的请求头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_headers:5 of
msgid "@param :: level : 为相应的网络层级更新请求头，默认为None，即立即更新请求头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_proxy:1 of
msgid "更新请求代理，打算更新的请求代理为一个字典，应有键'http'"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_proxy:3 of
msgid "@param :: proxy : 打算更新的代理"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_useragent:1 of
msgid "更新浏览器头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.refresh_useragent:3 of
msgid "@param :: useragent : 打算更新的浏览器头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.set_headers:1 of
msgid "设置请求头，直接以传入的请求头作为请求头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.set_headers:3 of
msgid "@param :: headers : 打算设置的请求头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.set_headers:5 of
msgid "@param :: level : 相应的网络层级设置请求头，默认为None，即立即设置请求头"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.set_timeout:1 of
msgid "设置延时"
msgstr ""

#: crawler.htmlDownloader.HtmlDownloader.set_timeout:3 of
msgid "@param :: timeout : 打算设置的延时"
msgstr ""

#: ../../source/crawler.rst:30
msgid "crawler.htmlParser"
msgstr ""

#: crawler.htmlParser.HtmlParser:1 of
msgid "网页解析器 默认使用lxml进行解析，可自定义url提取方式与数据提取方式，将自定义解析函数作为对象传入解析器进行解析"
msgstr ""

#: crawler.htmlParser.HtmlParser.parse:1 of
msgid "解析函数、返回url集合与数据集合"
msgstr ""

#: crawler.htmlParser.HtmlParser.parse:3 of
msgid ""
"@param :: response : 打算解析响应内容，是一个字典，包含属性 "
"'url','status','text','content','level',分别表示请求url，响应状态码，响应文本，响应内容 "
"(二进制),请求层级"
msgstr ""

#: crawler.htmlParser.HtmlParser.parse:5 of
msgid "return : list<url>、list<data>"
msgstr ""

#: ../../source/crawler.rst:38
msgid "crawler.writter"
msgstr ""

#: crawler.writter.DataWriter:1 of
msgid "数据写入类 支持多种数据格式写入文本，初始化类实例时，可传入一个字典格式的headers,key作为所有数据的key,value作为数据写入后的头部"
msgstr ""

#: crawler.writter.DataWriter.flush_buffer:1 of
msgid "刷新缓冲"
msgstr ""

#: crawler.writter.DataWriter.has_buffer:1 of
msgid "缓冲区是否有数据"
msgstr ""

#: crawler.writter.DataWriter.write:1 of
msgid "文件写入，写入数据格式为二维结构，即二维列表或者二维字典，或者相互组合"
msgstr ""

#: crawler.writter.DataWriter.write:3 crawler.writter.DataWriter.write_buffer:3
#: of
msgid "@param :: items : 数据序列"
msgstr ""

#: crawler.writter.DataWriter.write_buffer:1 of
msgid "文件以缓冲方式写入，写入数据格式为二维结构，即二维列表或者二维字典，或者相互组合"
msgstr ""

